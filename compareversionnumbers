public class Solution {
    public int compareVersion(String version1, String version2) {
        List<Double> v1Strs = parseStr(version1);
        List<Double> v2Strs = parseStr(version2);
        int i = 0;
        while(i<v1Strs.size() || i < v2Strs.size()) {
            if(i>=v2Strs.size()) {
                if(v1Strs.get(i)!=0) return 1;
            } else if(i>=v1Strs.size()) {
                if(v2Strs.get(i)!=0) return -1;
            } else {
                double v1 = v1Strs.get(i);
                double v2 = v2Strs.get(i);
                if(v1>v2) return 1;
                if(v1 < v2) return -1;
            }
            i++;
        }
        
        return 0;
    }
    
    public List<Double> parseStr(String str) {
        List<Double> values = new ArrayList<Double>();
        int i = getBeforeDot(str, 0, values);
        i = i + 1;
        while(i < str.length()) {
            i = getAfterDot(str, i, values);
            i++;
        }
        return values;
    }
    
    public int getBeforeDot(String str, int i, List<Double> values) {
        double val = 0;
        double multiply = 1;
        while(i< str.length() && str.charAt(i) == '0') {
            i++;
        }
        while(i<str.length() && str.charAt(i) != '.') {
            int digit = str.charAt(i) - '0';
            val = val * multiply + digit;
            multiply *= 10;
            i++;
        }
        values.add(val);
        return i;
    }
    
    public int getAfterDot(String str, int i, List<Double> values) {
        double val = 0;
        double multiply = 1;
        /*if(str.charAt(i) == '0') {
            multiply = 0.1;
            while(i < str.length() && str.charAt(i) != '.') {
                int digit = str.charAt(i) - '0';
                val = val + digit * multiply;
                i++;
                multiply *= 0.1;
            }
            values.add(val);
            return i;
        } else {*/
        while(i< str.length() && str.charAt(i) == '0')  {
            i++;
        }
        while(i < str.length() && str.charAt(i) != '.') {
                int digit = str.charAt(i) - '0';
                val = val* multiply + digit;
                multiply *= 10;
                i++;
        }
        values.add(val);
        return i;
    }
       
}
